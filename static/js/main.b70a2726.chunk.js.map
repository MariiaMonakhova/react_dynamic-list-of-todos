{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","utils/todo.ts","utils/httpClient.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelectTodo","className","map","todo","cn","id","completed","title","type","onClick","event","preventDefault","handleSelectedTodo","TodoFilter","query","onQueryChange","state","onStateChange","defaultValue","onChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todoModal","onDeleteSelected","useState","loaded","setLoaded","user","setUser","useEffect","userId","userData","href","email","name","getTodos","response","App","setTodos","filteredTodos","setFilteredTodos","setSelectedTodo","setQuery","setState","todosFromServer","finally","filteredItems","normalizedQuery","trim","toLowerCase","filter","includes","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b70a2726.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onSelectTodo: (value: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectTodo,\n}) => {\n  function handleSelectedTodo(event: React.MouseEvent, todo: Todo) {\n    event.preventDefault();\n    onSelectTodo(todo);\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={cn(\n              { 'has-background-info-light': selectedTodo?.id === todo.id },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={event => handleSelectedTodo(event, todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn(\n                      { 'far fa-eye': selectedTodo?.id !== todo.id },\n                      { 'far fa-eye-slash': selectedTodo?.id === todo.id },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  onQueryChange: (value: string) => void,\n  state: string,\n  onStateChange: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  state,\n  onStateChange,\n}) => {\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    onQueryChange(event.target.value);\n  }\n\n  function handleReset() {\n    onQueryChange('');\n  }\n\n  function handleStateChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    onStateChange(event.target.value);\n  }\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            defaultValue={state}\n            onChange={handleStateChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleReset}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todoModal: Todo | null,\n  onDeleteSelected: (value: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todoModal, onDeleteSelected }) => {\n  const [loaded, setLoaded] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todoModal) {\n      setLoaded(true);\n\n      getUser(todoModal.userId)\n        .then(userData => {\n          setUser(userData);\n          setLoaded(false);\n        });\n    }\n  }, [todoModal]);\n\n  function handleReset() {\n    onDeleteSelected(null);\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todoModal?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleReset}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoModal?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn(\n                { 'has-text-danger': !todoModal?.completed },\n                { 'has-text-success': todoModal?.completed },\n              )}\n              >\n                {!todoModal?.completed ? (\n                  'Planned'\n                ) : (\n                  'Done'\n                )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { getData } from './httpClient';\n\nexport function getTodos() {\n  return getData<Todo[]>('/todos.json')\n    .then(todos => todos);\n}\n","const BASE_URL = 'http://localhost:3000/api';\n\nexport function getData<T>(url: string): Promise<T> {\n  return fetch(BASE_URL + url)\n    .then((response) => response.json());\n}\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './utils/todo';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>(todos);\n  const [loaded, setLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [state, setState] = useState('All');\n\n  useEffect(() => {\n    setLoaded(true);\n    setTimeout(() => {\n      getTodos().then(todosFromServer => {\n        setTodos(todosFromServer);\n      }).finally(() => setLoaded(false));\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    let filteredItems = [...todos];\n    const normalizedQuery = query.trim().toLowerCase();\n\n    if (query) {\n      filteredItems = filteredItems.filter(\n        todo => todo.title.toLowerCase().includes(normalizedQuery),\n      );\n    }\n\n    switch (state) {\n      case 'completed':\n        filteredItems = filteredItems.filter(item => item.completed);\n        break;\n\n      case 'active':\n        filteredItems = filteredItems.filter(item => !item.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    setFilteredTodos(filteredItems);\n  }, [todos, query, state]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                state={state}\n                onStateChange={setState}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loaded ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  onSelectTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todoModal={selectedTodo}\n          onDeleteSelected={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}